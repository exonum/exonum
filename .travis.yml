language: rust

branches:
  only:
  - master
  # Github release tags (for example "v0.9" or "v0.9.1").
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
  # Branch names endings with "-release" (for example "0.9.0-release").
  - /-release$/
  # Dynamic services branch
  - dynamic_services

addons:
  apt:
    sources:
    - sourceline: 'ppa:exonum/rocksdb'
    - sourceline: 'ppa:maarten-fonville/protobuf'
    - sourceline: 'ppa:fsgmhoward/shadowsocks-libev'
    - sourceline: 'deb [arch=amd64] https://packages.microsoft.com/ubuntu/16.04/prod xenial main'
      key_url: https://packages.microsoft.com/keys/microsoft.asc
    packages:
    - binutils-dev
    - build-essential
    - cmake
    - g++
    - gcc
    - libcurl4-openssl-dev
    - libdw-dev
    - libelf-dev
    - libiberty-dev
    - libprotobuf-dev
    - librocksdb5.17
    - libsnappy-dev
    - libsodium-dev
    - libssl-dev
    - pkg-config
    - powershell
    - protobuf-compiler
    - unzip
    - zlib1g-dev

rust:
  - 1.37.0

cache:
  npm: true
  directories:
  - $HOME/.local
  - $HOME/.cargo
  - $HOME/.kcov
  - $TRAVIS_BUILD_DIR/target
  timeout: 900

dist: xenial
sudo: required

env:
  global:
  - DEADLINKS_VERS=0.4.1
  - RUSTFLAGS="-D warnings"
  - ROCKSDB_LIB_DIR=/usr/lib
  - SNAPPY_LIB_DIR=/usr/lib/x86_64-linux-gnu
  matrix:
  - FEATURE=test

jobs:
  include:
  # Formatting & other lints.
  - name: lints
    install:
    - cargo deadlinks -V | grep $DEADLINKS_VERS || cargo install cargo-deadlinks --vers $DEADLINKS_VERS --force
    - cargo install --list
    - rustup component add rustfmt
    - rustfmt -V
    - rustup component add clippy
    - cargo clippy --version
    - nvm install 8 && nvm use 8
    - npm install
    - ./node_modules/.bin/cspell --version
    - ./node_modules/.bin/markdownlint --version
    script:
    - npm run cspell
    - npm run md
    # Clippy lints.
    - cargo clippy --all --benches --features "long_benchmarks"
    # Other cargo lints.
    - cargo fmt --all -- --check
    - cargo clean --doc
    - cargo doc --no-deps
    # TODO: Temporary hack to ignore warnings about missing pages. (ECR-703)
    - mkdir -p target/doc/exonum_configuration
    - mkdir -p target/std/string
    - touch target/std/string/struct.String.html
    - touch target/std/primitive.usize.html
    - mkdir -p target/doc/std/option
    - touch target/doc/exonum_cli/password/struct.String.html
    - touch target/doc/std/option/enum.Option.html
    - touch target/doc/std/primitive.usize.html
    - touch target/doc/std/primitive.char.html
    # https://github.com/deadlinks/cargo-deadlinks/issues/37
    - touch target/doc/enum.HashTag.html
    - cargo deadlinks --dir target/doc

    # Run kcov.
  - name: kcov
    install:
    - |
      if [ ! -f "$HOME/.kcov/bin/kcov" ]; then
        wget https://github.com/SimonKagstrom/kcov/archive/v36.tar.gz
        tar xzf v36.tar.gz
        cd kcov-36
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/.kcov -DCMAKE_BUILD_TYPE=Release
        make -j2
        make install
        cd ../..
        rm -rf kcov-36
      fi
    script:
    - cargo test --no-run
    - cd $TRAVIS_BUILD_DIR
    - for file in `find target/debug/ -maxdepth 1 -type f | egrep "*-([a-zA-Z0-9]{16}$)"`; do mkdir -p "target/cov/$(basename $file)"; $HOME/.kcov/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
    - bash <(curl -s https://codecov.io/bash)
    - echo "Uploaded code coverage"

  # Unit tests.
  - name: unit-test
    script:
    - cargo test --all
    - cargo run -p exonum --example explorer
    - cargo run -p exonum-testkit --example timestamping
    # - cargo run -p exonum-testkit --example configuration_change TODO enable after [ECR-3306]
    - cargo run -p exonum-time --example simple_service

  # Integration tests.
  - name: integration-tests
    install:
    - nvm install 8 && nvm use 8
    - cd $TRAVIS_BUILD_DIR/testkit/server && npm install && cd $TRAVIS_BUILD_DIR
    script:
    - echo "TODO"
    # TODO Add stage for integration tests instead of this ad-hoc implementation. [ECR-3308]
    # - cd $TRAVIS_BUILD_DIR/examples/cryptocurrency/examples && ./test.sh
    # - cd $TRAVIS_BUILD_DIR/examples/cryptocurrency/examples && ./test.ps1
    # - cd $TRAVIS_BUILD_DIR/testkit/server && npm run proto && npm run test:unix

before_cache:
  - |
    cd $TRAVIS_BUILD_DIR/target/debug
    rm -rf incremental examples
    find . -maxdepth 1 -type f -executable -delete
    find deps -type f -size +20M -delete
    du -h -d 1 .

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/9599da7e3a500810190d
