// Copyright 2019 The Exonum Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package exonum.supervisor;

import "types.proto";
import "service.proto";
import "runtime.proto";
import "google/protobuf/empty.proto";

message ConfigProposalWithHash {
    exonum.crypto.Hash propose_hash = 1;
    ConfigPropose config_propose = 2;
}

// Information about deploy error.
message ErrorInfo {
    // Height on which error occurred.
    uint64 height = 1;
    // Occurred error.
    exonum.runtime.ExecutionError error = 2;
}

// Deployment state.
message DeployState {
    enum Type {
        // Deploy is in process.
        PENDING = 0;
        // Deployment errored.
        FAIL = 1;
        // Deadline was reached.
        TIMEOUT = 2;
        // Deployment succeed.
        SUCCESS = 3;
    }

    // Deploy state.
    Type state = 1;
    // Set only for `type == FAIL`.
    ErrorInfo error = 2;
}
