// Copyright 2019 The Exonum Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package exonum.service.configuration;

import "helpers.proto";

// Propose a new configuration.
message Propose {
  // Configuration in JSON format.
  string cfg = 1;
}

// Vote for the new configuration.
message Vote {
  // Hash of the configuration that this vote is for.
  // See crate docs for more details on how the hash is calculated.
  exonum.Hash cfg_hash = 1;
}

// VoteAgainst for the new configuration.
message VoteAgainst {
  // Hash of the configuration that this vote is for.
  // See crate docs for more details on how the hash is calculated.
  exonum.Hash cfg_hash = 1;
}

// Extended information about a proposal used for the storage.
message ProposeData {
  // Proposal transaction.
  Propose tx_propose = 1;
  // Merkle root of all votes for the proposal.
  exonum.Hash votes_history_hash = 2;
  // Number of eligible voting validators.
  uint64 num_validators = 3;
}
