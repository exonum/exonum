// Copyright 2020 The Exonum Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
import "types.proto";

package exonum.proof;

option java_package = "com.exonum.core.messages";

// Subset of ProofList elements coupled with a proof. ListProof` can assert existence of
// certain elements and that the list is shorter than the requested range of indexes.
message ListProof {
    // Array of { ProofListKey, Hash } objects.
    repeated HashedEntry proof = 1;
    // Array with list elements and their indexes.
    repeated ListProofEntry entries = 2;
    // Length of the underlying `ProofListIndex`.
    uint64 length = 3;
}

// Represents list key and corresponding hash value.
message HashedEntry {
    ProofListKey key = 1;
    exonum.crypto.Hash hash = 2;
}

// Index of the list element and its value.
message ListProofEntry {
    uint64 index = 1;
    bytes value = 2;
}

// Represents list node position in the merkle tree.
message ProofListKey {
    uint64 index = 1;
    uint32 height = 2;
}
